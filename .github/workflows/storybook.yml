
# name: Electron

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   test:
#     runs-on: ${{ matrix.os }} # runs a test on Ubuntu, Windows and macOS

#     strategy:
#       matrix:
#         os: [macOS-latest]

#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           node-version: '12.18.2'

#       - run: npm install yarn -g

#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"

#       - uses: actions/cache@v2
#         id: yarn-cache
#         with:
#           key: yarn-v3-${{ hashFiles('**/yarn.lock') }}
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}

#       - name: Install dependencies
#         run: yarn install --frozen-lockfile

#       - run: ls ${{ steps.yarn-cache-dir-path.outputs.dir }}

#       - run: yarn run ship
#         env:
#           GH_TOKEN: 61d01182593d3692ccd5183d44ee467eb9f5d0ce

#name: Electron
#
#on:
#  push:
#    branches: [main]
#  pull_request:
#    branches: [main]
#
#jobs:
#  test:
#    runs-on: ${{ matrix.os }} # runs a test on Ubuntu, Windows and macOS
#
#    strategy:
#      matrix:
#        os: [macOS-latest]
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v2
#        with:
#          node-version: '12.18.2'
#
#      - run: npm install yarn -g
#
#      - name: Get yarn cache directory path
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#
#      - uses: actions/cache@v2
#        id: yarn-cache
#        with:
#          key: yarn-v4-${{ hashFiles('**/yarn.lock') }}
#          path: |
#            ./node_modules
#            ./src/main-app/node_modules/
#            ./src/renderer-app/node_modules/
#            ./packages/types-pkg/node_modules/
#            ~/Library/Caches/electron/
#      - name: Install dependencies
#        run: yarn install --frozen-lockfile
#        if: steps.yarn-cache.outputs.cache-hit != 'true'
#
#      - name: Build types
#        run: yarn workspace types-pkg build
#        if: steps.yarn-cache.outputs.cache-hit == 'true'
#
#      #  - run: ls ~/Library/Caches/electron/
#
#      # - run: |
#      #      yarn workspace renderer-app build
#      #     yarn workspace main-app build
#      - run: yarn run ship
#        env:
#          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}


name: Storybook
on:
  push:
    branches:
      - 'main'
    paths:
      - 'packages/flat-components/src/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "12.18.2"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          key: yarn-storybook-v1-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          path: |
            ./node_modules
            ./packages/**/node_modules

      - name: Install dependencies
        run: |
          rm .yarnrc
          node ./scripts/ci/storybook/remove-desktop-workspaces-packages.js
          yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - name: Build Types
        # it must be added here, otherwise when the cache matches, there will be flat-types not found
        run: yarn workspace flat-types build
        if: steps.yarn-cache.outputs.cache-hit == 'true'

      - name: Install and Build
        run: |
          yarn workspace flat-components build-storybook

      - name: Deploy Storybook
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packages/flat-components/storybook-static
